SET DATABASE SQL SYNTAX MYS TRUE;

drop table t_user if exists;
create table t_user (id bigint generated by default as identity (start with 1), username varchar(255), email varchar(255), mobile varchar(255), nickname varchar(255), password varchar(255), user_level varchar(255), memo varchar(255), create_time timestamp, create_user_id bigint, update_time timestamp, update_user_id bigint, valid boolean not null, primary key (id));
create unique index uniq_t_user_username on t_user (username);

INSERT INTO t_user (username, mobile, email, nickname, password, user_level, valid) VALUES ('f0rb', '17778888881', 'test1@qq.com', '测试1', '123456', '高级', true);
INSERT INTO t_user (username, mobile, email, nickname, password, user_level, valid) VALUES ('user2', '17778888882', 'test2@qq.com', '测试2', '123456', '普通', true);
INSERT INTO t_user (username, mobile, email, nickname, password, user_level, valid) VALUES ('user3', '17778888883', 'test3@qq.com', '测试3', '123456', '普通', true);
INSERT INTO t_user (username, mobile, email, nickname, password, user_level, valid) VALUES ('user4', '17778888884', 'test4@qq.com', '测试4', '123456', '普通', true);

create table user_detail (id bigint, address varchar(255), primary key (id));

drop table t_role if exists;
create table t_role(id bigint generated by default as identity (start with 1), role_name VARCHAR(100) not null, role_code VARCHAR(100) not null, VALID boolean DEFAULT TRUE, create_time timestamp, create_user_id bigint, update_time timestamp, update_user_id bigint);

INSERT INTO t_role (role_name, role_code) VALUES ('admin', 'ADMIN');
INSERT INTO t_role (role_name, role_code) VALUES ('vip', 'VIP');
INSERT INTO t_role (role_name, role_code) VALUES ('vip2', 'VIP2');
INSERT INTO t_role (role_name, role_code) VALUES ('vip3', 'VIP3');
INSERT INTO t_role (role_name, role_code) VALUES ('vip4', 'VIP4');

drop table menu_01 if exists;
create table menu_01 (id integer generated by default as identity (start with 1), create_time timestamp, create_user_id bigint, update_time timestamp, update_user_id bigint, platform varchar(15), memo varchar(255), menu_name varchar(255), parent_id integer, valid boolean, primary key (id));
drop table menu if exists;
create table menu (id integer generated by default as identity (start with 1), create_time timestamp, create_user_id bigint, update_time timestamp, update_user_id bigint, platform varchar(15), memo varchar(255), menu_name varchar(255), parent_id integer, valid boolean, primary key (id));

INSERT INTO menu_01 (id, platform, parent_id, menu_name, memo, valid) VALUES (1, '01', 0, 'root', 'root menu', true);
INSERT INTO menu_01 (id, platform, parent_id, menu_name, memo, valid) VALUES (2, '01', 1, 'first', 'first menu', true);
INSERT INTO menu (id, platform, parent_id, menu_name, memo, valid) VALUES (1, '02', 0, 'root', 'root menu', true);

create table t_user_and_role (id bigint generated by default as identity (start with 1), user_id bigint, role_id int, createuser_id bigint);
create unique index unidx_t_user_and_role on t_user_and_role (user_id, role_id);

INSERT INTO t_user_and_role (user_id, role_id) VALUES (1, 1);
INSERT INTO t_user_and_role (user_id, role_id) VALUES (1, 2);
INSERT INTO t_user_and_role (user_id, role_id) VALUES (3, 1);
INSERT INTO t_user_and_role (user_id, role_id) VALUES (4, 1);
INSERT INTO t_user_and_role (user_id, role_id) VALUES (4, 2);

drop table t_perm if exists;
CREATE TABLE t_perm
(
  id        bigint generated BY DEFAULT AS IDENTITY (start WITH 1) primary key,
  permName  VARCHAR(100) not null,
  valid     boolean DEFAULT TRUE
);

drop table t_role_and_perm if exists;
CREATE TABLE t_role_and_perm (role_id int, perm_id int);
alter table t_role_and_perm add constraint t_role_and_perm_unique_constraint unique (role_id, perm_id);

INSERT INTO t_perm (permName, valid) VALUES ('user:list', true);
INSERT INTO t_perm (permName, valid) VALUES ('user:get', true);
INSERT INTO t_perm (permName, valid) VALUES ('user:update', true);
INSERT INTO t_perm (permName, valid) VALUES ('user:delete', true);

INSERT INTO t_role_and_perm (role_id, perm_id) VALUES (1, 1);
INSERT INTO t_role_and_perm (role_id, perm_id) VALUES (1, 3);
INSERT INTO t_role_and_perm (role_id, perm_id) VALUES (2, 3);
INSERT INTO t_role_and_perm (role_id, perm_id) VALUES (5, 1);
INSERT INTO t_role_and_perm (role_id, perm_id) VALUES (5, 4);
