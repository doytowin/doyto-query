SET DATABASE SQL SYNTAX MYS TRUE

drop table t_user if exists;
create table t_user (id bigint generated by default as identity (start with 1), email varchar(255), mobile varchar(255), nickname varchar(255), password varchar(255), userLevel varchar(255), username varchar(255), memo varchar(255), valid boolean not null, primary key (id));

INSERT INTO t_user (id, username, mobile, email, nickname, password, userLevel, valid) VALUES (1, 'f0rb', '17778888881', 'f0rb@163.com', '测试1', '123456', '高级', true);
INSERT INTO t_user (id, username, mobile, email, nickname, password, userLevel, valid) VALUES (2, 'user2', '17778888882', 'test2@qq.com', '测试2', '123456', '普通', true);
INSERT INTO t_user (id, username, mobile, email, nickname, password, userLevel, memo, valid) VALUES (3, 'user3', '17778888883', 'test3@qq.com', '测试3', '123456', '普通', 'memo', true);
INSERT INTO t_user (id, username, mobile, email, nickname, password, userLevel, valid) VALUES (4, 'user4', '17778888884', 'test4@qq.com', '测试4', '123456', '普通', true);

create table user_detail (id bigint, address varchar(255), primary key (id));

drop table menu_01 if exists;
create table menu_01 (id integer generated by default as identity (start with 1), createTime timestamp, createUserId bigint, updateTime timestamp, updateUserId bigint, platform varchar(15), memo varchar(255), menuName varchar(255), parentId integer, valid boolean, primary key (id));
drop table menu if exists;
create table menu (id integer generated by default as identity (start with 1), createTime timestamp, createUserId bigint, updateTime timestamp, updateUserId bigint, platform varchar(15), memo varchar(255), menuName varchar(255), parentId integer, valid boolean, primary key (id));

INSERT INTO menu_01 (id, platform, parentId, menuName, memo, valid) VALUES (1, '01', 0, 'root', 'root menu', true);
INSERT INTO menu_01 (id, platform, parentId, menuName, memo, valid) VALUES (2, '01', 1, 'first', 'first menu', true);
INSERT INTO menu (id, platform, parentId, menuName, memo, valid) VALUES (1, '02', 0, 'root', 'root menu', true);

create table t_role(id bigint generated by default as identity (start with 1), ROLENAME VARCHAR(100) not null, ROLECODE VARCHAR(100) not null, VALID boolean DEFAULT TRUE, createTime timestamp, createUserId bigint, updateTime timestamp, updateUserId bigint);
INSERT INTO t_role (ROLENAME, ROLECODE) VALUES ('测试', 'TEST');
INSERT INTO t_role (ROLENAME, ROLECODE) VALUES ('高级', 'VIP');
INSERT INTO t_role (ROLENAME, ROLECODE) VALUES ('高级2', 'VIP2');
INSERT INTO t_role (ROLENAME, ROLECODE) VALUES ('高级3', 'VIP3');
INSERT INTO t_role (ROLENAME, ROLECODE) VALUES ('高级4', 'VIP4');

create table j_user_and_role (id bigint generated by default as identity (start with 1), user_id bigint, role_id int, createUserId bigint);
alter table j_user_and_role add constraint T_USER_AND_ROLE_unique_constraint unique (user_id, role_id);

INSERT INTO j_user_and_role (user_id, role_id) VALUES (1, 1);
INSERT INTO j_user_and_role (user_id, role_id) VALUES (1, 2);
INSERT INTO j_user_and_role (user_id, role_id) VALUES (3, 1);
INSERT INTO j_user_and_role (user_id, role_id) VALUES (4, 1);
INSERT INTO j_user_and_role (user_id, role_id) VALUES (4, 2);
